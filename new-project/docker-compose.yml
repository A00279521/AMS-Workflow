version: '3.7'
services:
  frontend:
    container_name: spring-petclinic-angular
    build: ./spring-petclinic-angular
    image: 16.3-alpine-spring-petclinic-angular:latest
    networks: 
     - my_network
    ports:
    - target: 8080
      published: 8080
  backend:
    environment:
      # MYSQL_DATABASE: 'mysql-petclinic-db'
      USER_NAME: ${MY_PC}
      USER_PASSWORD: ${MY_PETCLINIC}
      # MYSQL_ROOT_PASSWORD: ${MY_PASSWORD}
    container_name: spring-petclinic-rest
    build: ./spring-petclinic-rest
    image: openjdk-spring-petclinic-rest:latest
    networks: 
     - my_network
    ports:
    - target: 9966
      published: 9966 
  mysql-petclinic-db:
    image: mysql:5.7.8
    restart: always
    networks: 
     - my_network
    environment:
      MYSQL_DATABASE: 'mysql-petclinic-db'
      MYSQL_USER: ${MY_PC}
      MYSQL_PASSWORD: ${MY_PETCLINIC}
      MYSQL_ROOT_PASSWORD: ${MY_PASSWORD}
      
    ports:
      - '3306:3306'
    expose:
      - '3306'
    volumes:
      - mysql-db:/var/lib/mysql
# Names our volume
volumes:
  mysql-db:

networks:
  my_network:
    
      